// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: message.proto

package ws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message_Type int32

const (
	Message_HEARTBEAT                                           Message_Type = 0
	Message_ACTIVATION                                          Message_Type = 1
	Message_ACTIVATION_AUDIT                                    Message_Type = 2
	Message_MARKET_AREA_SUMMARY                                 Message_Type = 3
	Message_DISPATCHER_COMMAND_EXECUTION_SUMMARY                Message_Type = 4
	Message_MARKET_AREA_EXECUTION_REPORT                        Message_Type = 5
	Message_MARKET_AREA_PROPORTIONAL_OPERATIONAL_SAFETY_SUMMARY Message_Type = 6
	Message_NDC_SUBMIT_COMMAND                                  Message_Type = 7
	Message_MARKET_AREA_DISPATCHERS_REQUEST                     Message_Type = 8
	Message_MARKET_AREA_DISPATCHERS_RESPONSE                    Message_Type = 9
	Message_SET_USER_STATE                                      Message_Type = 10
	Message_ERROR                                               Message_Type = 11
	Message_NDC_SUBMIT_PROPORTIONAL_COMMAND                     Message_Type = 12
	Message_NDC_COMMAND_PRE_SUBMIT_REQUEST                      Message_Type = 13
	Message_NDC_COMMAND_PRE_SUBMIT_RESPONSE                     Message_Type = 14
	Message_GENERATION_HISTORY_RESPONSE                         Message_Type = 21
	Message_GENERATION_HISTORY_REQUEST                          Message_Type = 20
	Message_DISPATCHER_COMMAND_HISTORY_REQUEST                  Message_Type = 22
	Message_DISPATCHER_COMMAND_HISTORY_RESPONSE                 Message_Type = 23
	Message_AGGREGATOR_HISTORY_REQUEST                          Message_Type = 24
	Message_AGGREGATOR_HISTORY_RESPONSE                         Message_Type = 25
	Message_PRIORITY_ACTIVATION_CANDIDATES_REQUEST              Message_Type = 30
	Message_PRIORITY_ACTIVATION_CANDIDATES_RESPONSE             Message_Type = 31
	Message_NDC_SUBMIT_PRIORITY_COMMAND                         Message_Type = 32
	Message_PRIORITY_ACTIVATION                                 Message_Type = 33
	Message_PROPORTIONAL_COMMAND_EXECUTION                      Message_Type = 34
	Message_PROPORTIONAL_ACTIVATION                             Message_Type = 35
	Message_PROPORTIONAL_ACTIVATION_AUDIT                       Message_Type = 36
	Message_MARKET_AREA_OPERATIONAL_SAFETY_SUMMARY              Message_Type = 39
	Message_OPERATIONAL_SAFETY_ALLOWANCE                        Message_Type = 40
	Message_GENERATION_PROPORTIONAL_HISTORY_REQUEST             Message_Type = 41
	Message_GENERATION_PROPORTIONAL_HISTORY_RESPONSE            Message_Type = 42
	Message_DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_REQUEST     Message_Type = 43
	Message_DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_RESPONSE    Message_Type = 44
)

// Enum value maps for Message_Type.
var (
	Message_Type_name = map[int32]string{
		0:  "HEARTBEAT",
		1:  "ACTIVATION",
		2:  "ACTIVATION_AUDIT",
		3:  "MARKET_AREA_SUMMARY",
		4:  "DISPATCHER_COMMAND_EXECUTION_SUMMARY",
		5:  "MARKET_AREA_EXECUTION_REPORT",
		6:  "MARKET_AREA_PROPORTIONAL_OPERATIONAL_SAFETY_SUMMARY",
		7:  "NDC_SUBMIT_COMMAND",
		8:  "MARKET_AREA_DISPATCHERS_REQUEST",
		9:  "MARKET_AREA_DISPATCHERS_RESPONSE",
		10: "SET_USER_STATE",
		11: "ERROR",
		12: "NDC_SUBMIT_PROPORTIONAL_COMMAND",
		13: "NDC_COMMAND_PRE_SUBMIT_REQUEST",
		14: "NDC_COMMAND_PRE_SUBMIT_RESPONSE",
		21: "GENERATION_HISTORY_RESPONSE",
		20: "GENERATION_HISTORY_REQUEST",
		22: "DISPATCHER_COMMAND_HISTORY_REQUEST",
		23: "DISPATCHER_COMMAND_HISTORY_RESPONSE",
		24: "AGGREGATOR_HISTORY_REQUEST",
		25: "AGGREGATOR_HISTORY_RESPONSE",
		30: "PRIORITY_ACTIVATION_CANDIDATES_REQUEST",
		31: "PRIORITY_ACTIVATION_CANDIDATES_RESPONSE",
		32: "NDC_SUBMIT_PRIORITY_COMMAND",
		33: "PRIORITY_ACTIVATION",
		34: "PROPORTIONAL_COMMAND_EXECUTION",
		35: "PROPORTIONAL_ACTIVATION",
		36: "PROPORTIONAL_ACTIVATION_AUDIT",
		39: "MARKET_AREA_OPERATIONAL_SAFETY_SUMMARY",
		40: "OPERATIONAL_SAFETY_ALLOWANCE",
		41: "GENERATION_PROPORTIONAL_HISTORY_REQUEST",
		42: "GENERATION_PROPORTIONAL_HISTORY_RESPONSE",
		43: "DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_REQUEST",
		44: "DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_RESPONSE",
	}
	Message_Type_value = map[string]int32{
		"HEARTBEAT":                            0,
		"ACTIVATION":                           1,
		"ACTIVATION_AUDIT":                     2,
		"MARKET_AREA_SUMMARY":                  3,
		"DISPATCHER_COMMAND_EXECUTION_SUMMARY": 4,
		"MARKET_AREA_EXECUTION_REPORT":         5,
		"MARKET_AREA_PROPORTIONAL_OPERATIONAL_SAFETY_SUMMARY": 6,
		"NDC_SUBMIT_COMMAND":                               7,
		"MARKET_AREA_DISPATCHERS_REQUEST":                  8,
		"MARKET_AREA_DISPATCHERS_RESPONSE":                 9,
		"SET_USER_STATE":                                   10,
		"ERROR":                                            11,
		"NDC_SUBMIT_PROPORTIONAL_COMMAND":                  12,
		"NDC_COMMAND_PRE_SUBMIT_REQUEST":                   13,
		"NDC_COMMAND_PRE_SUBMIT_RESPONSE":                  14,
		"GENERATION_HISTORY_RESPONSE":                      21,
		"GENERATION_HISTORY_REQUEST":                       20,
		"DISPATCHER_COMMAND_HISTORY_REQUEST":               22,
		"DISPATCHER_COMMAND_HISTORY_RESPONSE":              23,
		"AGGREGATOR_HISTORY_REQUEST":                       24,
		"AGGREGATOR_HISTORY_RESPONSE":                      25,
		"PRIORITY_ACTIVATION_CANDIDATES_REQUEST":           30,
		"PRIORITY_ACTIVATION_CANDIDATES_RESPONSE":          31,
		"NDC_SUBMIT_PRIORITY_COMMAND":                      32,
		"PRIORITY_ACTIVATION":                              33,
		"PROPORTIONAL_COMMAND_EXECUTION":                   34,
		"PROPORTIONAL_ACTIVATION":                          35,
		"PROPORTIONAL_ACTIVATION_AUDIT":                    36,
		"MARKET_AREA_OPERATIONAL_SAFETY_SUMMARY":           39,
		"OPERATIONAL_SAFETY_ALLOWANCE":                     40,
		"GENERATION_PROPORTIONAL_HISTORY_REQUEST":          41,
		"GENERATION_PROPORTIONAL_HISTORY_RESPONSE":         42,
		"DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_REQUEST":  43,
		"DISPATCHER_COMMAND_PROPORTIONAL_HISTORY_RESPONSE": 44,
	}
)

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}

func (x Message_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (Message_Type) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x Message_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Type.Descriptor instead.
func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion int32        `protobuf:"varint,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Type       Message_Type `protobuf:"varint,2,opt,name=type,proto3,enum=ws.Message_Type" json:"type,omitempty"`
	Payload    []byte       `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetApiVersion() int32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *Message) GetType() Message_Type {
	if x != nil {
		return x.Type
	}
	return Message_HEARTBEAT
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x77, 0x73, 0x22, 0x93, 0x0a, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x77, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xa7, 0x09, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52,
	0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x53, 0x55, 0x4d,
	0x4d, 0x41, 0x52, 0x59, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x04,
	0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x05, 0x12, 0x37, 0x0a, 0x33, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52, 0x45,
	0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x54,
	0x59, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x4e,
	0x44, 0x43, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52,
	0x45, 0x41, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x52, 0x53, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41, 0x52, 0x4b,
	0x45, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48,
	0x45, 0x52, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x09, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0b, 0x12, 0x23, 0x0a,
	0x1f, 0x4e, 0x44, 0x43, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x10, 0x0c, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x44, 0x43, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x0d, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x44, 0x43, 0x5f, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0e, 0x12, 0x1f, 0x0a, 0x1b, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x15, 0x12, 0x1e, 0x0a, 0x1a,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x14, 0x12, 0x26, 0x0a, 0x22,
	0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41,
	0x4e, 0x44, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x16, 0x12, 0x27, 0x0a, 0x23, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x17, 0x12, 0x1e, 0x0a,
	0x1a, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x18, 0x12, 0x1f, 0x0a,
	0x1b, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x19, 0x12, 0x2a,
	0x0a, 0x26, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45, 0x53,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x1e, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x1f, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x44, 0x43, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x20, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x49, 0x4f,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x21, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x22, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54,
	0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x23, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x10, 0x24, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f,
	0x41, 0x52, 0x45, 0x41, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10,
	0x27, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x28, 0x12, 0x2b, 0x0a, 0x27, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x48,
	0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x29,
	0x12, 0x2c, 0x0a, 0x28, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50,
	0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x2a, 0x12, 0x33,
	0x0a, 0x2f, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x4c, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x2b, 0x12, 0x34, 0x0a, 0x30, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x2c, 0x42, 0x10, 0x5a, 0x0e, 0x6e, 0x69, 0x6b,
	0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x6c, 0x6d, 0x73, 0x2f, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_proto_goTypes = []interface{}{
	(Message_Type)(0), // 0: ws.Message.Type
	(*Message)(nil),   // 1: ws.Message
}
var file_message_proto_depIdxs = []int32{
	0, // 0: ws.Message.type:type_name -> ws.Message.Type
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
